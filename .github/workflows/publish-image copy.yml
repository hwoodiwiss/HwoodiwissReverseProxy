name: publish-image

on:
  workflow_dispatch:
    inputs:
      tag-version:
        description: "The tag version to use for the image"
        required: true
  push:
    tags:
      - "v*"

permissions:
  contents: read
  packages: write

jobs:
  get-tag-version:
    runs-on: ubuntu-latest
    outputs:
      tag-version: ${{ steps.get_tag.outputs.tag-version }}
    steps:
      - name: Get Tag Version
        id: get_tag
        run: echo "tag-version=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag-version || github.ref_name }}" >> $GITHUB_OUTPUT

  build-image:
    needs: [get-tag-version]
    strategy:
      matrix:
        architecture:
          - arm64
          - amd64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4

      - name: Login to GHCR
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u hwoodiwiss --password-stdin

      - name: Install ARM64 native dependencies
        if: matrix.architecture == 'arm64'
        run: |
          sudo dpkg --add-architecture arm64
          sudo bash -c 'cat > /etc/apt/sources.list.d/arm64.list <<EOF
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
          EOF'
          sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
          sudo sed -i -e 's/deb mirror/deb [arch=amd64] mirror/g' /etc/apt/sources.list
          sudo apt update
          sudo apt install --yes clang llvm binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu zlib1g-dev:arm64

      - name: Publish Image
        run: |
          dotnet publish --os linux --arch ${{ matrix.architecture }} /t:PublishContainer -p ContainerImageTags='"${{ needs.get-tag-version.outputs.tag-version }}-${{ matrix.architecture }}${{ matrix.architecture == 'arm64' && ';latest' || '' }}"'

  create-tag:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [get-tag-version, build-image]
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Create Tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/tags/${{ needs.get-tag-version.outputs.tag-version }}',
                sha: context.sha
              })
